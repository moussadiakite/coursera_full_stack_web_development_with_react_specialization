{"version":3,"sources":["components/LoadingComponent.js","shared/baseUrl.js","components/MenuComponent.js","components/DishdetailComponent.js","components/HeaderComponent.js","components/FooterComponent.js","components/HomeComponent.js","components/ContactComponent.js","components/AboutComponent.js","redux/ActionCreators.js","redux/ActionTypes.js","components/MainComponent.js","redux/dishes.js","redux/comments.js","redux/promotions.js","redux/leaders.js","redux/forms.js","App.js","redux/configureStore.js","serviceWorker.js","index.js"],"names":["Loading","react_default","a","createElement","className","baseUrl","RenderMenuItem","_ref","dish","onClick","Card","react_router_dom","to","concat","id","CardImg","width","src","image","alt","name","CardImgOverlay","CardTitle","Menu","props","dishes","isLoading","LoadingComponent_Loading","errMess","menu","map","key","Breadcrumb","BreadcrumbItem","active","required","val","length","maxLength","len","RenderDish","react_animation_components","in","transformProps","exitTransform","top","CardBody","CardText","description","CommentForm","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","toggleModal","bind","assertThisInitialized","handleSubmit","state","isModalOpen","setState","values","postComment","dishId","rating","author","comment","Modal","isOpen","toggle","ModalHeader","ModalBody","lib","onSubmit","Row","Label","htmlFor","md","Col","select","model","defaultValue","text","placeholder","validators","minLength","show","messages","textarea","rows","Button","type","value","color","outline","Component","RenderComments","_ref2","comments","commentsList","date","Intl","DateTimeFormat","year","month","day","format","Date","parse","DishdetailComponent_CommentForm","DishDetail","Header","toggleNav","handleLogin","isNavOpen","event","alert","username","password","remember","checked","preventDefault","_this2","Fragment","Form","FormGroup","Input","innerRef","input","check","Navbar","dark","expand","NavbarToggler","NavbarBrand","href","height","Collapse","navbar","Nav","NavItem","Jumbotron","Footer","RenderCard","item","designation","CardSubtitle","Home","dishesLoading","dishesErrMess","promotion","promoLoading","promoErrMess","leader","leaderLoading","leaderErrMess","isNumber","isNaN","Number","validEmail","test","Contact","firstname","lastname","telnum","email","agree","contactType","message","touched","handleInputChange","target","defineProperty","console","log","JSON","stringify","postFeedback","resetFeedbackForm","role","size","offset","RenderLeader","Media","body","RenderLeaderList","leaders","leadersRendered","list","About","_ref3","leadersLoading","leadersErrMess","CardHeader","title","dishesFailed","errmess","payload","addDishes","commentsFailed","addComments","promosLoading","promosFailed","addPromos","promos","leadersFailed","addLeaders","Main","fetchDishes","fetchComments","fetchPromos","fetchLeaders","HeaderComponent","react_transition_group","location","classNames","timeout","react_router","path","component","HomeComponent","filter","featured","dishErrMess","promotions","promo","exact","AboutComponent","MenuComponent","match","DishdetailComponent","parseInt","params","commentsErrMess","ContactComponent","FooterComponent","withRouter","connect","dispatch","newComment","toISOString","fetch","method","headers","Content-Type","credentials","then","response","ok","error","Error","status","statusText","json","catch","newFeedback","actions","reset","Dishes","arguments","undefined","action","objectSpread","Comments","Promotions","Leaders","InitialFeedback","store","createStore","combineReducers","createForms","feedback","applyMiddleware","thunk","logger","App","es","MainComponent","Boolean","window","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.523d9022.chunk.js","sourcesContent":["import React from 'react';\n\nexport const Loading = () => {\n    return(\n        <div className=\"col-12\">\n            <span className=\"fa fa-spinner fa-pulse fa-3x fa-fw text-primary\"></span>\n            <p>Loading . . .</p>\n        </div>\n    );\n};","export const baseUrl = 'http://localhost:3002/';","import React from 'react';\nimport { Card, CardImg, CardImgOverlay,\n    CardTitle, Breadcrumb, BreadcrumbItem } from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\n\nfunction RenderMenuItem ({dish, onClick}) {\n    return (\n        <Card>\n            <Link to={`/menu/${dish.id}`} >\n                <CardImg width=\"100%\" src={baseUrl + dish.image} alt={dish.name} />\n                <CardImgOverlay>\n                    <CardTitle>{dish.name}</CardTitle>\n                </CardImgOverlay>\n            </Link>\n        </Card>\n    );\n}\n\nconst Menu = (props) => {\n    if (props.dishes.isLoading) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (props.dishes.errMess) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <div className=\"col-12\">\n                        <h4>{props.dishes.errMess}</h4>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    else {\n        const menu = props.dishes.dishes.map((dish) => {\n            return (\n                <div className=\"col-12 col-md-5 m-1\" key={dish.id}>\n                    <RenderMenuItem dish={dish} onClick={props.onClick}/>\n                </div>\n            );\n        });\n\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Menu</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Menu</h3>\n                        <hr/>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    {menu}\n                </div>\n            </div>\n        );\n    }\n};\n\nexport default Menu;","import React, { Component } from 'react';\nimport {\n    Card,\n    CardImg,\n    CardText,\n    CardBody,\n    CardTitle,\n    Breadcrumb,\n    BreadcrumbItem,\n    ModalHeader,\n    ModalBody,\n    Label,\n    Button,\n    Modal,\n    Row,\n    Col\n} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport {Control, Errors, LocalForm} from \"react-redux-form\";\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform, Fade, Stagger } from 'react-animation-components';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\n\nfunction RenderDish({dish}){\n    return (\n        <FadeTransform\n            in\n            transformProps={{\n                exitTransform: 'scale(0.5) translateY(-50%)'\n            }}>\n            <Card>\n                <CardImg top src={baseUrl + dish.image} alt={dish.name} />\n                <CardBody>\n                    <CardTitle>{dish.name}</CardTitle>\n                    <CardText>{dish.description}</CardText>\n                </CardBody>\n            </Card>\n        </FadeTransform>\n    );\n}\n\nclass CommentForm extends Component{\n    constructor(props){\n        super(props);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n        this.state = {\n            isModalOpen: false\n        };\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleSubmit(values) {\n        this.toggleModal();\n        this.props.postComment(this.props.dishId, values.rating, values.author, values.comment);\n    }\n\n    render() {\n        return (\n            <div>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Submit Comment</ModalHeader>\n                    <ModalBody>\n                        <LocalForm onSubmit={this.handleSubmit}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"rating\" md={12}>Rating</Label>\n                                <Col md={12}>\n                                    <Control.select model=\".rating\" id=\"rating\" name=\"rating\"\n                                                    className=\"form-control\"\n                                                    defaultValue=\"1\">\n                                        <option>1</option>\n                                        <option>2</option>\n                                        <option>3</option>\n                                        <option>4</option>\n                                        <option>5</option>\n                                    </Control.select>\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"author\" md={12}>Your name</Label>\n                                <Col md={12}>\n                                    <Control.text model=\".author\" id=\"author\" name=\"author\" placeholder=\"Your name\"\n                                           className=\"form-control\"\n                                           validators={{\n                                               required, minLength: minLength(3), maxLength: maxLength(15)\n                                           }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".author\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"comment\" md={12}>Comment</Label>\n                                <Col md={12}>\n                                    <Control.textarea model=\".comment\" id=\"comment\" name=\"comment\"\n                                                      rows=\"6\" className=\"form-control\"\n                                    />\n                                </Col>\n                            </Row>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Submit</Button>\n                        </LocalForm>\n                    </ModalBody>\n                </Modal>\n                <Button outline onClick={this.toggleModal}><span className=\"fa fa-pencil fa-lg\"></span> Submit\n                    comment</Button>\n            </div>\n        )\n    }\n}\n\nfunction RenderComments({comments, postComment, dishId}){\n    if (comments == null) {\n        return <div></div>;\n    }\n    const commentsList = comments.map((comment) => {\n        let date = new Intl.DateTimeFormat('en-US', {\n            year: 'numeric',\n            month: 'short',\n            day: '2-digit'\n        }).format(new Date(Date.parse(comment.date)));\n        return (\n            <Fade in>\n                <li key={comment.id}>\n                    <p>{comment.comment}</p>\n                    <p> {\"-- \" + comment.author + \", \" + date}</p>\n                </li>\n            </Fade>\n        );\n    });\n\n    return (\n        <div>\n            <h4>Comments</h4>\n            <ul className=\"list-unstyled\">\n                <Stagger in>\n                    {commentsList}\n                </Stagger>\n            </ul>\n            <CommentForm dishId={dishId} postComment={postComment}/>\n        </div>\n    );\n}\n\nconst DishDetail = (props) => {\n    if (props.isLoading) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Loading />\n                </div>\n            </div>\n        );\n    }\n    else if (props.errMess) {\n        return(\n            <div className=\"container\">\n                <div className=\"row\">\n                    <h4>{props.errMess}</h4>\n                </div>\n            </div>\n        );\n    }\n    else if (props.dish != null) {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n\n                        <BreadcrumbItem><Link to=\"/menu\">Menu</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>{props.dish.name}</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>{props.dish.name}</h3>\n                        <hr/>\n                    </div>\n                </div>\n                <div className=\"row\">\n                    <div className=\"col-12 col-md-5 m-1\">\n                        <RenderDish dish={props.dish}/>\n                    </div>\n                    <div className=\"col-12 col-md-5 m-1\">\n                        <RenderComments comments={props.comments}\n                                        postComment={props.postComment}\n                                        dishId={props.dish.id}/>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n    else {\n        return (\n            <div>\n\n            </div>\n        );\n    }\n};\n\nexport default DishDetail;","import { Navbar, NavbarBrand, Nav, NavbarToggler, Collapse, NavItem, Jumbotron,\n         Button, Modal, ModalHeader, ModalBody, Form, FormGroup, Input, Label } from 'reactstrap';\nimport { NavLink } from 'react-router-dom';\nimport React, { Component } from 'react';\n\nclass Header extends Component {\n    constructor(props) {\n        super(props);\n\n        this.toggleNav = this.toggleNav.bind(this);\n        this.toggleModal = this.toggleModal.bind(this);\n        this.handleLogin = this.handleLogin.bind(this);\n\n        this.state = {\n            isNavOpen: false,\n            isModalOpen: false\n        };\n    }\n\n    toggleNav() {\n        this.setState({\n            isNavOpen: !this.state.isNavOpen\n        });\n    }\n\n    toggleModal() {\n        this.setState({\n            isModalOpen: !this.state.isModalOpen\n        });\n    }\n\n    handleLogin(event) {\n        this.toggleModal();\n        alert(\"Username: \" + this.username.value + \" Password: \" + this.password.value\n            + \" Remember: \" + this.remember.checked);\n        event.preventDefault();\n\n    }\n\n    render() {\n        return(\n            <>\n                <Modal isOpen={this.state.isModalOpen} toggle={this.toggleModal}>\n                    <ModalHeader toggle={this.toggleModal}>Login</ModalHeader>\n                    <ModalBody>\n                        <Form onSubmit={this.handleLogin}>\n                            <FormGroup>\n                                <Label htmlFor=\"username\">Username</Label>\n                                <Input type=\"text\" id=\"username\" name=\"username\"\n                                       innerRef={(input) => this.username = input} />\n                            </FormGroup>\n                            <FormGroup>\n                                <Label htmlFor=\"password\">Password</Label>\n                                <Input type=\"password\" id=\"password\" name=\"password\"\n                                       innerRef={(input) => this.password = input}  />\n                            </FormGroup>\n                            <FormGroup check>\n                                <Label check>\n                                    <Input type=\"checkbox\" name=\"remember\"\n                                           innerRef={(input) => this.remember = input}  />\n                                    Remember me\n                                </Label>\n                            </FormGroup>\n                            <Button type=\"submit\" value=\"submit\" color=\"primary\">Login</Button>\n                        </Form>\n                    </ModalBody>\n                </Modal>\n                <Navbar dark expand=\"md\">\n                    <div className=\"container\">\n                        <NavbarToggler onClick={this.toggleNav} />\n                        <NavbarBrand className=\"mr-auto\" href=\"/\"><img src='assets/images/logo.png' height=\"30\" width=\"41\" alt='Ristorante Con Fusion' /></NavbarBrand>\n                        <Collapse isOpen={this.state.isNavOpen} navbar>\n                            <Nav navbar>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\"  to='/home'><span className=\"fa fa-home fa-lg\"></span> Home</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to='/aboutus'><span className=\"fa fa-info fa-lg\"></span> About Us</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\"  to='/menu'><span className=\"fa fa-list fa-lg\"></span> Menu</NavLink>\n                                </NavItem>\n                                <NavItem>\n                                    <NavLink className=\"nav-link\" to='/contactus'><span className=\"fa fa-address-card fa-lg\"></span> Contact Us</NavLink>\n                                </NavItem>\n                            </Nav>\n                        </Collapse>\n                        <Nav className=\"ml-auto\" navbar>\n                            <NavItem>\n                                <Button outline onClick={this.toggleModal}><span className=\"fa fa-sign-in fa-lg\"></span> Login</Button>\n                            </NavItem>\n                        </Nav>\n                    </div>\n                </Navbar>\n                <Jumbotron>\n                    <div className=\"container\">\n                        <div className=\"row row-header\">\n                            <div className=\"col-12 col-sm-6\">\n                                <h1>Ristorante con Fusion</h1>\n                                <p>We take inspiration from the World's best cuisines, and create a unique fusion experience. Our lipsmacking creations will tickle your culinary senses!</p>\n                            </div>\n                        </div>\n                    </div>\n                </Jumbotron>\n            </>\n        );\n    }\n}\n\nexport default Header;","import { Link } from 'react-router-dom';\nimport React from 'react';\n\nfunction Footer(props) {\n    return(\n        <div className=\"footer\">\n            <div className=\"container\">\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-4 offset-1 col-sm-2\">\n                        <h5>Links</h5>\n                        <ul className=\"list-unstyled\">\n                            <li><Link to='/home'>Home</Link></li>\n                            <li><Link to='/aboutus'>About Us</Link></li>\n                            <li><Link to='/menu'>Menu</Link></li>\n                            <li><Link to='/contactus'>Contact Us</Link></li>\n                        </ul>\n                    </div>\n                    <div className=\"col-7 col-sm-5\">\n                        <h5>Our Address</h5>\n                        <address>\n                            121, Clear Water Bay Road<br />\n                            Clear Water Bay, Kowloon<br />\n                            HONG KONG<br />\n                            <i className=\"fa fa-phone fa-lg\"></i>: +852 1234 5678<br />\n                            <i className=\"fa fa-fax fa-lg\"></i>: +852 8765 4321<br />\n                            <i className=\"fa fa-envelope fa-lg\"></i>: <a href=\"mailto:confusion@food.net\">\n                            confusion@food.net</a>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-4 align-self-center\">\n                        <div className=\"text-center\">\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://google.com/+\"><i className=\"fa fa-google-plus\"></i></a>\n                            <a className=\"btn btn-social-icon btn-facebook\" href=\"http://www.facebook.com/profile.php?id=\"><i className=\"fa fa-facebook\"></i></a>\n                            <a className=\"btn btn-social-icon btn-linkedin\" href=\"http://www.linkedin.com/in/\"><i className=\"fa fa-linkedin\"></i></a>\n                            <a className=\"btn btn-social-icon btn-twitter\" href=\"http://twitter.com/\"><i className=\"fa fa-twitter\"></i></a>\n                            <a className=\"btn btn-social-icon btn-google\" href=\"http://youtube.com/\"><i className=\"fa fa-youtube\"></i></a>\n                            <a className=\"btn btn-social-icon\" href=\"mailto:\"><i className=\"fa fa-envelope-o\"></i></a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row justify-content-center\">\n                    <div className=\"col-auto\">\n                        <p>© Copyright 2018 Ristorante Con Fusion</p>\n                    </div>\n                </div>\n            </div>\n        </div>\n    )\n}\n\nexport default Footer;","import React from 'react';\nimport { Card, CardImg, CardText, CardBody,\n    CardTitle, CardSubtitle} from 'reactstrap';\nimport { Loading } from './LoadingComponent';\nimport { baseUrl } from '../shared/baseUrl';\nimport { FadeTransform } from 'react-animation-components';\n\nfunction RenderCard({item, isLoading, errMess}) {\n\n    if (isLoading) {\n        return(\n            <Loading />\n        );\n    }\n    else if (errMess) {\n        return(\n            <h4>{errMess}</h4>\n        );\n    }\n    else\n        return(\n            <FadeTransform\n                in\n                transformProps={{\n                    exitTransform: 'scale(0.5) translateY(-50%)'\n                }}>\n                <Card>\n                    <CardImg src={baseUrl + item.image} alt={item.name} />\n                    <CardBody>\n                        <CardTitle>{item.name}</CardTitle>\n                        {item.designation ? <CardSubtitle>{item.designation}</CardSubtitle> : null }\n                        <CardText>{item.description}</CardText>\n                    </CardBody>\n                </Card>\n            </FadeTransform>\n        );\n\n}\n\nfunction Home(props) {\n    return(\n        <div className=\"container\">\n            <div className=\"row align-items-start\">\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.dish}\n                                isLoading={props.dishesLoading}\n                                errMess={props.dishesErrMess}/>\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.promotion}\n                                isLoading={props.promoLoading}\n                                errMess={props.promoErrMess}/>\n                </div>\n                <div className=\"col-12 col-md m-1\">\n                    <RenderCard item={props.leader}\n                                isLoading={props.leaderLoading}\n                                errMess={props.leaderErrMess}/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default Home;","import { Link } from 'react-router-dom';\nimport React, { Component } from 'react';\nimport { Breadcrumb, BreadcrumbItem, Button, Row, Col, Label } from 'reactstrap';\nimport { Control, Form, Errors } from 'react-redux-form';\n\nconst required = (val) => val && val.length;\nconst maxLength = (len) => (val) => !(val) || (val.length <= len);\nconst minLength = (len) => (val) => val && (val.length >= len);\nconst isNumber = (val) => !isNaN(Number(val));\nconst validEmail = (val) => /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i.test(val);\n\nclass Contact extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            firstname: '',\n            lastname: '',\n            telnum: '',\n            email: '',\n            agree: false,\n            contactType: 'Tel.',\n            message: '',\n            touched: {\n                firstname: false,\n                lastname: false,\n                telnum: false,\n                email: false\n            }\n        };\n\n        this.handleInputChange = this.handleInputChange.bind(this);\n        this.handleSubmit = this.handleSubmit.bind(this);\n\n    }\n\n    handleInputChange(event) {\n        const target = event.target;\n        const value = target.type === 'checkbox' ? target.checked : target.value;\n        const name = target.name;\n\n        this.setState({\n            [name]: value\n        });\n    }\n\n    handleSubmit(values) {\n        console.log('Current State is: ' + JSON.stringify(values));\n        alert('Current State is: ' + JSON.stringify(values));\n        this.props.postFeedback(values.firstname, values.lastname, values.telnum, values.email, values.message);\n        this.props.resetFeedbackForm();\n    }\n\n    render() {\n        return (\n            <div className=\"container\">\n                <div className=\"row\">\n                    <Breadcrumb>\n                        <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                        <BreadcrumbItem active>Contact Us</BreadcrumbItem>\n                    </Breadcrumb>\n                    <div className=\"col-12\">\n                        <h3>Contact Us</h3>\n                        <hr/>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Location Information</h3>\n                    </div>\n                    <div className=\"col-12 col-sm-4 offset-sm-1\">\n                        <h5>Our Address</h5>\n                        <address>\n                            121, Clear Water Bay Road<br/>\n                            Clear Water Bay, Kowloon<br/>\n                            HONG KONG<br/>\n                            <i className=\"fa fa-phone\"></i>: +852 1234 5678<br/>\n                            <i className=\"fa fa-fax\"></i>: +852 8765 4321<br/>\n                            <i className=\"fa fa-envelope\"></i>: <a\n                            href=\"mailto:confusion@food.net\">confusion@food.net</a>\n                        </address>\n                    </div>\n                    <div className=\"col-12 col-sm-6 offset-sm-1\">\n                        <h5>Map of our Location</h5>\n                    </div>\n                    <div className=\"col-12 col-sm-11 offset-sm-1\">\n                        <div className=\"btn-group\" role=\"group\">\n                            <a role=\"button\" className=\"btn btn-primary\" href=\"tel:+85212345678\"><i\n                                className=\"fa fa-phone\"></i> Call</a>\n                            <a role=\"button\" className=\"btn btn-info\" href=\"https://www.skype.com/en/\"><i className=\"fa fa-skype\"></i> Skype</a>\n                            <a role=\"button\" className=\"btn btn-success\" href=\"mailto:confusion@food.net\"><i\n                                className=\"fa fa-envelope-o\"></i> Email</a>\n                        </div>\n                    </div>\n                </div>\n                <div className=\"row row-content\">\n                    <div className=\"col-12\">\n                        <h3>Send us your Feedback</h3>\n                    </div>\n                    <div className=\"col-12 col-md-9\">\n                        <Form model=\"feedback\" onSubmit={(values) => this.handleSubmit(values)}>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"firstname\" md={2}>First Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".firstname\" id=\"firstname\" name=\"firstname\"\n                                                  placeholder=\"First Name\"\n                                                  className=\"form-control\"\n                                                  validators={{\n                                                      required, minLength: minLength(3), maxLength: maxLength(15)\n                                                  }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".firstname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"lastname\" md={2}>Last Name</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".lastname\" id=\"lastname\" name=\"lastname\"\n                                                  placeholder=\"Last Name\"\n                                                  className=\"form-control\"\n                                                  validators={{\n                                                      required, minLength: minLength(3), maxLength: maxLength(15)\n                                                  }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".lastname\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 characters',\n                                            maxLength: 'Must be 15 characters or less'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"telnum\" md={2}>Contact Tel.</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".telnum\" id=\"telnum\" name=\"telnum\"\n                                                  placeholder=\"Tel. Number\"\n                                                  className=\"form-control\"\n                                                  validators={{\n                                                      required, minLength: minLength(3), maxLength: maxLength(15), isNumber\n                                                  }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".telnum\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            minLength: 'Must be greater than 2 numbers',\n                                            maxLength: 'Must be 15 numbers or less',\n                                            isNumber: 'Must be a number'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"email\" md={2}>Email</Label>\n                                <Col md={10}>\n                                    <Control.text model=\".email\" id=\"email\" name=\"email\"\n                                                  placeholder=\"Email\"\n                                                  className=\"form-control\"\n                                                  validators={{\n                                                      required, validEmail\n                                                  }}\n                                    />\n                                    <Errors\n                                        className=\"text-danger\"\n                                        model=\".email\"\n                                        show=\"touched\"\n                                        messages={{\n                                            required: 'Required',\n                                            validEmail: 'Invalid Email Address'\n                                        }}\n                                    />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Label htmlFor=\"message\" md={2}>Your Feedback</Label>\n                                <Col md={10}>\n                                    <Control.textarea model=\".message\" id=\"message\" name=\"message\"\n                                                      rows=\"12\"\n                                                      className=\"form-control\" />\n                                </Col>\n                            </Row>\n                            <Row className=\"form-group\">\n                                <Col md={{size:10, offset: 2}}>\n                                    <Button type=\"submit\" color=\"primary\">\n                                        Send Feedback\n                                    </Button>\n                                </Col>\n                            </Row>\n                        </Form>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nexport default Contact;","import React from 'react';\nimport {Breadcrumb, BreadcrumbItem, Card, CardBody, CardHeader, Media} from 'reactstrap';\nimport { Link } from 'react-router-dom';\nimport { baseUrl } from '../shared/baseUrl';\nimport {Loading} from \"./LoadingComponent\";\nimport { Fade, Stagger } from 'react-animation-components';\n\nfunction RenderLeader({leader}){\n        return (\n            <Media className=\"mt-5 mb-5\">\n                <img className=\"d-flex align-self-center mr-3 img-thumbnail\" src={baseUrl + leader.image}\n                     alt={leader.name}/>\n                    <Media body>\n                        <h2 className=\"mt-0\">{leader.name}</h2>\n                        <h6>{leader.designation}</h6>\n                        {leader.description}\n                    </Media>\n            </Media>\n        );\n}\n\nfunction RenderLeaderList({leaders, isLoading, errMess}) {\n    if (isLoading) {\n        return(\n            <Loading />\n        );\n    }\n    else if (errMess) {\n        return(\n            <h4>{errMess}</h4>\n        );\n    }\n    else {\n        const leadersRendered = leaders.leaders.map((leader) => {\n            return (\n                <Fade in>\n                <RenderLeader leader={leader} key={leader.id}/>\n                </Fade>\n            );\n        });\n        return (\n            <Media list>\n                <Stagger in>\n                    {leadersRendered}\n                </Stagger>\n            </Media>\n        );\n    }\n}\n\nfunction About({leaders, leadersLoading, leadersErrMess}) {\n    return(\n        <div className=\"container\">\n            <div className=\"row\">\n                <Breadcrumb>\n                    <BreadcrumbItem><Link to=\"/home\">Home</Link></BreadcrumbItem>\n                    <BreadcrumbItem active>About Us</BreadcrumbItem>\n                </Breadcrumb>\n                <div className=\"col-12\">\n                    <h3>About Us</h3>\n                    <hr />\n                </div>                \n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12 col-md-6\">\n                    <h2>Our History</h2>\n                    <p>Started in 2010, Ristorante con Fusion quickly established itself as a culinary icon par excellence in Hong Kong. With its unique brand of world fusion cuisine that can be found nowhere else, it enjoys patronage from the A-list clientele in Hong Kong.  Featuring four of the best three-star Michelin chefs in the world, you never know what will arrive on your plate the next time you visit us.</p>\n                    <p>The restaurant traces its humble beginnings to <em>The Frying Pan</em>, a successful chain started by our CEO, Mr. Peter Pan, that featured for the first time the world's best cuisines in a pan.</p>\n                </div>\n                <div className=\"col-12 col-md-5\">\n                    <Card>\n                        <CardHeader className=\"bg-primary text-white\">Facts At a Glance</CardHeader>\n                        <CardBody>\n                            <dl className=\"row p-1\">\n                                <dt className=\"col-6\">Started</dt>\n                                <dd className=\"col-6\">3 Feb. 2013</dd>\n                                <dt className=\"col-6\">Major Stake Holder</dt>\n                                <dd className=\"col-6\">HK Fine Foods Inc.</dd>\n                                <dt className=\"col-6\">Last Year's Turnover</dt>\n                                <dd className=\"col-6\">$1,250,375</dd>\n                                <dt className=\"col-6\">Employees</dt>\n                                <dd className=\"col-6\">40</dd>\n                            </dl>\n                        </CardBody>\n                    </Card>\n                </div>\n                <div className=\"col-12\">\n                    <Card>\n                        <CardBody className=\"bg-faded\">\n                            <blockquote className=\"blockquote\">\n                                <p className=\"mb-0\">You better cut the pizza in four pieces because\n                                    I'm not hungry enough to eat six.</p>\n                                <footer className=\"blockquote-footer\">Yogi Berra,\n                                <cite title=\"Source Title\">The Wit and Wisdom of Yogi Berra,\n                                    P. Pepe, Diversion Books, 2014</cite>\n                                </footer>\n                            </blockquote>\n                        </CardBody>\n                    </Card>\n                </div>\n            </div>\n            <div className=\"row row-content\">\n                <div className=\"col-12\">\n                    <h2>Corporate Leadership</h2>\n                </div>\n                <div className=\"col-12\">\n                    <RenderLeaderList leaders={leaders} isLoading={leadersLoading} errMess={leadersErrMess}/>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nexport default About;    ","import * as ActionTypes from './ActionTypes';\nimport { baseUrl } from '../shared/baseUrl';\n\nexport const fetchDishes = () => (dispatch) => {\n\n    dispatch(dishesLoading(true));\n\n    return fetch(baseUrl + 'dishes')\n        .then(response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(dishes => dispatch(addDishes(dishes)))\n        .catch(error => dispatch(dishesFailed(error.message)));\n};\n\nexport const dishesLoading = () => ({\n    type: ActionTypes.DISHES_LOADING\n});\n\nexport const dishesFailed = (errmess) => ({\n    type: ActionTypes.DISHES_FAILED,\n    payload: errmess\n});\n\nexport const addDishes = (dishes) => ({\n    type: ActionTypes.ADD_DISHES,\n    payload: dishes\n});\n\nexport const fetchComments = () => (dispatch) => {\n    return fetch(baseUrl + 'comments')\n        .then(response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(comments => dispatch(addComments(comments)))\n        .catch(error => dispatch(commentsFailed(error.message)));\n};\n\nexport const commentsLoading = () => ({\n    type: ActionTypes.COMMENTS_LOADING\n});\n\nexport const commentsFailed = (errmess) => ({\n    type: ActionTypes.COMMENTS_FAILED,\n    payload: errmess\n});\n\nexport const addComments = (comments) => ({\n    type: ActionTypes.ADD_COMMENTS,\n    payload: comments\n});\n\nexport const addComment = (comment) => ({\n    type: ActionTypes.ADD_COMMENT,\n    payload: comment\n});\n\nexport const postComment = (dishId, rating, author, comment) => (dispatch) => {\n\n    const newComment = {\n        dishId: dishId,\n        rating: rating,\n        author: author,\n        comment: comment\n    };\n    newComment.date = new Date().toISOString();\n\n    return fetch(baseUrl + 'comments', {\n        method: \"POST\",\n        body: JSON.stringify(newComment),\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        credentials: \"same-origin\"\n    })\n    .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        }, error => {\n            throw error;\n        })\n        .then(response => response.json())\n        .then(response => dispatch(addComment(response)))\n        .catch(error => {\n            console.log('post comments', error.message);\n            alert('Your comment could not be posted\\nError: ' + error.message);\n        });\n};\n\nexport const fetchPromos = () => (dispatch) => {\n\n    dispatch(promosLoading());\n\n    return fetch(baseUrl + 'promotions')\n        .then(response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(promos => dispatch(addPromos(promos)))\n        .catch(error => dispatch(promosFailed(error.message)));\n};\n\nexport const promosLoading = () => ({\n    type: ActionTypes.PROMOS_LOADING\n});\n\nexport const promosFailed = (errmess) => ({\n    type: ActionTypes.PROMOS_FAILED,\n    payload: errmess\n});\n\nexport const addPromos = (promos) => ({\n    type: ActionTypes.ADD_PROMOS,\n    payload: promos\n});\n\nexport const fetchLeaders = () => (dispatch) => {\n\n    dispatch(leadersLoading());\n\n    return fetch(baseUrl + 'leaders')\n        .then(response => {\n                if (response.ok) {\n                    return response;\n                } else {\n                    var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                    error.response = response;\n                    throw error;\n                }\n            },\n            error => {\n                var errmess = new Error(error.message);\n                throw errmess;\n            })\n        .then(response => response.json())\n        .then(promos => dispatch(addLeaders(promos)))\n        .catch(error => dispatch(leadersFailed(error.message)));\n};\n\nexport const leadersLoading = () => ({\n    type: ActionTypes.LEADERS_LOADING\n});\n\nexport const leadersFailed = (errmess) => ({\n    type: ActionTypes.LEADERS_FAILED,\n    payload: errmess\n});\n\nexport const addLeaders = (promos) => ({\n    type: ActionTypes.ADD_LEADERS,\n    payload: promos\n});\n\nexport const addFeedback = (feedback) => ({\n    type: ActionTypes.ADD_FEEDBACK,\n    payload: feedback\n});\n\nexport const postFeedback = (firstname, lastname, telnum, email, message) => (dispatch) => {\n\n    const newFeedback = {\n        firstname: firstname,\n        lastname: lastname,\n        telnum: telnum,\n        email: email,\n        message: message\n    };\n    newFeedback.date = new Date().toISOString();\n\n    return fetch(baseUrl + 'feedback', {\n        method: \"POST\",\n        body: JSON.stringify(newFeedback),\n        headers: {\n            \"Content-Type\": \"application/json\"\n        },\n        credentials: \"same-origin\"\n    })\n        .then(response => {\n            if (response.ok) {\n                return response;\n            } else {\n                var error = new Error('Error ' + response.status + ': ' + response.statusText);\n                error.response = response;\n                throw error;\n            }\n        }, error => {\n            throw error;\n        })\n        .then(response => response.json())\n        .then(response => dispatch(addFeedback(response)))\n        .catch(error => {\n            console.log('post feedback', error.message);\n            alert('Your feedback could not be posted\\nError: ' + error.message);\n        });\n};","export const DISHES_LOADING = 'DISHES_LOADING';\nexport const DISHES_FAILED = 'DISHES_FAILED';\nexport const ADD_DISHES = 'ADD_DISHES';\n\nexport const COMMENTS_LOADING = 'COMMENTS_FAILED';\nexport const COMMENTS_FAILED = 'COMMENTS_FAILED';\nexport const ADD_COMMENTS = 'ADD_COMMENTS';\nexport const ADD_COMMENT = 'ADD_COMMENT';\n\nexport const PROMOS_LOADING = 'PROMOS_LOADING';\nexport const PROMOS_FAILED = 'PROMOS_FAILED';\nexport const ADD_PROMOS = 'ADD_PROMOS';\n\nexport const LEADERS_LOADING = 'LEADERS_LOADING';\nexport const LEADERS_FAILED = 'LEADERS';\nexport const ADD_LEADERS = 'ADD_LEADERS';\n\nexport const ADD_FEEDBACK = 'ADD_FEEDBACK';","import React, { Component } from 'react';\nimport Menu from './MenuComponent';\nimport DishDetail from './DishdetailComponent';\nimport Header from './HeaderComponent';\nimport Footer from './FooterComponent';\nimport Home from './HomeComponent';\nimport Contact from './ContactComponent';\nimport { Switch, Route, Redirect, withRouter } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport About from \"./AboutComponent\";\nimport { postComment, postFeedback, fetchDishes, fetchComments, fetchPromos, fetchLeaders } from '../redux/ActionCreators';\nimport { actions } from 'react-redux-form';\nimport { TransitionGroup, CSSTransition } from 'react-transition-group';\n\nconst mapStateToProps = state => {\n    return {\n        dishes: state.dishes,\n        comments: state.comments,\n        promotions: state.promotions,\n        leaders: state.leaders\n    }\n};\n\nconst mapDispatchToProps = dispatch => ({\n    postComment: (dishId, rating, author, comment) => dispatch(postComment(dishId, rating, author, comment)),\n    postFeedback: (firstname, lastname, telnum, email, message) => dispatch(postFeedback(firstname, lastname, telnum, email, message)),\n    fetchDishes: () => { dispatch(fetchDishes())},\n    resetFeedbackForm: () => { dispatch(actions.reset('feedback'))},\n    fetchComments: () => dispatch(fetchComments()),\n    fetchPromos: () => dispatch(fetchPromos()),\n    fetchLeaders: () => dispatch(fetchLeaders())\n});\n\nclass Main extends Component {\n    componentDidMount() {\n        this.props.fetchDishes();\n        this.props.fetchComments();\n        this.props.fetchPromos();\n        this.props.fetchLeaders();\n    }\n\n    render() {\n        const HomePage = () => {\n            return(\n                <Home\n                    dish={this.props.dishes.dishes.filter((dish) => dish.featured)[0]}\n                    dishesLoading={this.props.dishes.isLoading}\n                    dishErrMess={this.props.dishes.errMess}\n                    promotion={this.props.promotions.promotions.filter((promo) => promo.featured)[0]}\n                    promoLoading={this.props.promotions.isLoading}\n                    promoErrMess={this.props.promotions.errMess}\n                    leader={this.props.leaders.leaders.filter((leader) => leader.featured)[0]}\n                    leaderLoading={this.props.leaders.isLoading}\n                    leaderErrMess={this.props.leaders.errMess}\n                />\n            );\n        };\n\n        const MenuPage = () => {\n            return(\n                <Menu dishes={this.props.dishes} />\n            );\n        };\n\n        const ContactPage = () => {\n            return(\n                <Contact postFeedback={this.props.postFeedback} resetFeedbackForm={this.props.resetFeedbackForm} />\n            );\n        };\n\n        const DishWithId = ({match}) => {\n            return(\n                <DishDetail dish={this.props.dishes.dishes.filter((dish) => dish.id === parseInt(match.params.dishId,10))[0]}\n                            isLoading={this.props.dishes.isLoading}\n                            errMess={this.props.dishes.errMess}\n                            comments={this.props.comments.comments.filter((comment) => comment.dishId === parseInt(match.params.dishId,10))}\n                            commentsErrMess={this.props.comments.errMess}\n                            postComment={this.props.postComment}\n                />\n            );\n        };\n\n        const AboutPage = () => {\n            return(\n                <About leaders={this.props.leaders}\n                       leadersLoading={this.props.leaders.isLoading}\n                       leadersErrMess={this.props.leaders.errMess}/>\n            );\n        };\n\n        return (\n            <>\n                <Header/>\n                <TransitionGroup>\n                    <CSSTransition key={this.props.location.key} classNames=\"page\" timeout={300}>\n                        <Switch location={this.props.location}>\n                            <Route path='/home' component={HomePage} />\n                            <Route exact path='/aboutus' component={AboutPage} />} />\n                            <Route exact path='/menu' component={MenuPage} />\n                            <Route path='/menu/:dishId' component={DishWithId} />\n                            <Route exact path='/contactus' component={ContactPage} />\n                            <Redirect to=\"/home\" />\n                        </Switch>\n                    </CSSTransition>\n                </TransitionGroup>\n                <Footer/>\n            </>\n        );\n    }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Main));","import * as ActionTypes from './ActionTypes';\n\nexport const Dishes = (state = { isLoading: true,\n    errMess: null,\n    dishes:[]}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_DISHES:\n            return {...state, isLoading: false, errMess: null, dishes: action.payload};\n\n        case ActionTypes.DISHES_LOADING:\n            return {...state, isLoading: true, errMess: null, dishes: []};\n\n        case ActionTypes.DISHES_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n\n        default:\n            return state;\n    }\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Comments = (state = { errMess: null, comments:[]}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_COMMENTS:\n            return {...state, errMess: null, comments: action.payload};\n\n        case ActionTypes.COMMENTS_FAILED:\n            return {...state, errMess: action.payload};\n\n        case ActionTypes.ADD_COMMENT:\n            var comment = action.payload;\n            return { ...state, comments: state.comments.concat(comment)};\n\n        default:\n            return state;\n    }\n};","import * as ActionTypes from './ActionTypes';\n\nexport const Promotions = (state  = { isLoading: true,\n    errMess: null,\n    promotions:[]}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_PROMOS:\n            return {...state, isLoading: false, errMess: null, promotions: action.payload};\n\n        case ActionTypes.PROMOS_LOADING:\n            return {...state, isLoading: true, errMess: null, promotions: []}\n\n        case ActionTypes.PROMOS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n\n        default:\n            return state;\n    }\n};","import * as ActionTypes from \"./ActionTypes\";\n\nexport const Leaders = (state  = { isLoading: true,\n    errMess: null,\n    leaders:[]}, action) => {\n    switch (action.type) {\n        case ActionTypes.ADD_LEADERS:\n            return {...state, isLoading: false, errMess: null, leaders: action.payload};\n\n        case ActionTypes.LEADERS_LOADING:\n            return {...state, isLoading: true, errMess: null, leaders: []}\n\n        case ActionTypes.LEADERS_FAILED:\n            return {...state, isLoading: false, errMess: action.payload};\n\n        default:\n            return state;\n    }\n};","export const InitialFeedback = {\n    firstname: '',\n    lastname: '',\n    telnum: '',\n    email: '',\n    agree: false,\n    contactType: 'Tel.',\n    message: ''\n};","import React from 'react';\nimport { Component } from 'react';\nimport { BrowserRouter } from 'react-router-dom';\nimport \"./App.css\"\n\nimport Main from './components/MainComponent'\n\nimport { Provider } from 'react-redux';\nimport { ConfigureStore } from './redux/configureStore';\n\nconst store = ConfigureStore();\n\nclass App extends Component {\n    render() {\n        return (\n            <Provider store={store}>\n                <BrowserRouter>\n                    <div className=\"App\">\n                        <Main />\n                    </div>\n                </BrowserRouter>\n            </Provider>\n        );\n    }\n}\n\nexport default App;\n","import {createStore, combineReducers, applyMiddleware} from 'redux';\nimport { Dishes } from './dishes';\nimport { Comments } from './comments';\nimport { Promotions } from './promotions';\nimport { Leaders } from './leaders';\nimport { createForms } from 'react-redux-form';\nimport { InitialFeedback } from './forms';\n\nimport thunk from 'redux-thunk';\nimport logger from 'redux-logger';\n\nexport const ConfigureStore = () => {\n    const store = createStore(\n        combineReducers({\n            dishes: Dishes,\n            comments: Comments,\n            promotions: Promotions,\n            leaders: Leaders,\n            ...createForms({\n                feedback: InitialFeedback\n            })\n        }),\n        applyMiddleware(thunk, logger)\n    );\n\n    return store;\n};","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport 'font-awesome/css/font-awesome.css';\nimport 'bootstrap-social/bootstrap-social.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}